{"status":"TESTS_FAILED","testResults":[{"name":"test.test_triple_square.TripleSquare.test_calls","successful":true,"message":"","valgrindFailed":false,"points":["p01-06.1"],"exception":[]},{"name":"test.test_triple_square.TripleSquare.test_calls2","successful":false,"message":"10 not found in [3] : Wrong number of printed lines: 10!","valgrindFailed":false,"points":["p01-06.2"],"exception":["  File \"/home/nikolai/anaconda3/lib/python3.7/unittest/case.py\", line 59, in testPartExecutor\n    yield\n","  File \"/home/nikolai/anaconda3/lib/python3.7/unittest/case.py\", line 628, in run\n    testMethod()\n","  File \"/home/nikolai/Documents/learning/datascience_mooc/exercises/tmcdata/TMC workspace/Exercises/hy/hy-data-analysis-with-python-2020/part01-e06_triple_square/test/test_triple_square.py\", line 67, in test_calls2\n    self.content_helper([3])\n","  File \"/home/nikolai/Documents/learning/datascience_mooc/exercises/tmcdata/TMC workspace/Exercises/hy/hy-data-analysis-with-python-2020/part01-e06_triple_square/test/test_triple_square.py\", line 23, in content_helper\n    self.assertIn(l, countlist, msg\u003d\"Wrong number of printed lines: %i!\" % l)\n","  File \"/home/nikolai/anaconda3/lib/python3.7/unittest/case.py\", line 1119, in assertIn\n    self.fail(self._formatMessage(msg, standardMsg))\n","  File \"/home/nikolai/anaconda3/lib/python3.7/unittest/case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]},{"name":"test.test_triple_square.TripleSquare.test_square_output_and_type","successful":true,"message":"","valgrindFailed":false,"points":["p01-06.1"],"exception":[]},{"name":"test.test_triple_square.TripleSquare.test_tiple_output_and_type","successful":true,"message":"","valgrindFailed":false,"points":["p01-06.1"],"exception":[]}],"logs":{}}